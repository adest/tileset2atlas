// Auto-generated from tileset-export.html.
// DO NOT EDIT.

library x_tileset_export;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'dart:json';
import 'package:js/js.dart' as js;
import 'src/model.dart';



class TilesetExport extends WebComponent with Observable  {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-tileset-export");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
  <div class="page-header">
    <h1>Get the atlas&nbsp;<small>The texture atlas was generated for you.</small></h1>
  </div>

  <div class="button-bar row-fluid">
    <button type="button" class="btn btn-primary">Copy to clipboard</button>
    <button type="button" disabled="" class="btn btn-primary">Save to file</button>
  </div>
  <div class="row-fluid">
    <pre></pre>
  </div>
''');
  autogenerated.ButtonElement __e18;
  autogenerated.PreElement __e20;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-tileset-export");
    setScopedCss("x-tileset-export", new autogenerated.ScopedCssMapper({".button-bar":"button-bar","x-tileset-export":"[is=\"x-tileset-export\"]"}));
    _css = getScopedCss("x-tileset-export");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e18 = __root.nodes[3].nodes[1];
    __t.listen(__e18.onClick, ($event) { clipboard(); });
    __e20 = __root.nodes[5].nodes[1];
    var __binding19 = __t.contentBind(() => jso, false);
    __e20.nodes.add(__binding19);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e18 = __e20 = null;
  }

  /** Original code from the component. */


  String __$jso;
  String get jso {
    if (__observe.observeReads) {
      __observe.notifyRead(this, __observe.ChangeRecord.FIELD, 'jso');
    }
    return __$jso;
  }
  set jso(String value) {
    if (__observe.hasObservers(this)) {
      __observe.notifyChange(this, __observe.ChangeRecord.FIELD, 'jso',
          __$jso, value);
    }
    __$jso = value;
  }

  TilesetExport() {
    jso = stringify(app.textureAtlas);
  }

  void clipboard() {
    js.context.window.prompt("Copy to clipboard: Ctrl+C, Enter", jso);
  }
}
//# sourceMappingURL=tileset-export.dart.map